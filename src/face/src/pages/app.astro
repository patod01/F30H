---
import Html from '@app/html.astro';
---
<Html title="HH Reports">
<main x-data="{
   projects: '',
   dates: ['', ''],
   results: {},
   show_results: false,
   downloaded: false
}">

<h1>Reportes de HH</h1>

<div class="card">
   <span style="max-width: 531px;">
      Escriba los proyectos, separados por <code>;</code>,
      <code>espacio</code> o <code>enter</code>, para generar sus
      reportes.
   </span><br>

   <textarea
      placeholder="proyectos..."
      :rows="projects.split('\\n').length < 2? 2: projects.split('\\n').length"
      x-model="projects"
      @keyup.ctrl.enter="lookup.click()"
   ></textarea><br>

   <span>HH informadas...</span><br>
   <span>Desde:</span>
   <input type="date" x-model="dates[0]"><br>
   <span>Hasta:</span>
   <input type="date" x-model="dates[1]"><br>

   <div class="button" id="lookup" @click="
      downloaded = false;
      projects =
         projects
            .split('\\n').join(' ')
            .split(' ').join(';')
            .split(';').filter(project => project != '')
            .sort();
      results = {};
      projects.forEach(project => results[project] = 'buscando...');
      projects = projects.join('; ');
      show_results = true;
      const info = {projects: projects.split('; '), dates};
      data = (await ejecutar('buscar_personas', info)).data;
      for (let project in results) results[project] = 0;
      for (let project of data) results[project[0]]+=project[3];
      for (let project in results)
         if (results[project] == 0)
            results[project] = 'not found';
      downloaded = true;
   ">Buscar reportes</div>
</div><br>

<div class="card tabla close" :class="{'close': !show_results}">
   <div>
      <button @click="[show_results, downloaded] = [false, false]">cerrar</button><br><br>
   </div>
   <table>
      <thead>
         <tr>
            <th>Proyecto</th><th x-text="!downloaded? 'Estado': 'HH Cargadas'"></th>
         </tr>
      </thead>
      <tbody>
         <template x-for="state, project in results">
         <tr><td x-text="project"></td><td x-html="(state).toString().italics()"></td></tr>
         </template>
      </tbody>
   </table>
</div><br>

<div class="card" x-show="downloaded" x-transition>
   <div class="button"
      @click="
         const datos = new Blob(
            [JSON.stringify(data.map(row => row.toString()), null, 2)],
            {type: 'application/json'}
         );
         const archivo = document.createElement('a');
         archivo.href = window.URL.createObjectURL(datos);
         archivo.download = `data.json`;
         archivo.click();
      "
   >Descargar</div>
</div><br>

<div class="card" x-data="{si: false}" x-show="downloaded" x-transition>
   <button @click="
      const dt = aq.table({
         PY: data.map(d => d[0]),
         date: data.map(d => d[1]),
         user: data.map(d => d[2]),
         HH: data.map(d => d[3])
      });
       pivoted = dt.groupby('PY', 'user').pivot('date', {total: d=> op.sum(d.HH)}).orderby('user');
      si = true;
   ">cross table</button>

   <template x-if="si">
   <div style="
      position: absolute;
      z-inddex: 3;
      letf: 0px;
      top: 0px;
   ">
      <button @click="si = false">cerrar</button>
      <div class="card" style="margin: 5px" x-html="pivoted.toHTML()"></div>
   </div>
   </template>
</div>

</main>
</Html>

<script src="https://cdn.jsdelivr.net/npm/arquero@latest"></script>

<style is:global>
   .card {
      @starting-style {
         scale: 0;
      }
      transition: all 0.5s ease;
      display: flex;
      flex-direction: column;
      justify-content: center;
   }
   .close {translate: -100vw 0}
   .tabla {
      display: flex;
      flex-direction: column;
      justify-content: center;
   }
   table {
      border-collapse: collapse;
      text-align: center;
   }
   th, td {
      padding: 3px 7px;
      border: 1px solid var(--button-border-on);
   }
</style>
